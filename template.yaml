apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: ec2-instance
  title: Deploy EC2 Instance with Terraform
  description: Provision an AWS EC2 instance using Terraform and GitHub Actions
spec:
  owner: user:liquizar
  type: service
  parameters:
    - title: Fill in EC2 details
      required:
        - instanceName
        - region
        - osChoice
        - action
      properties:
        instanceName:
          title: EC2 Instance Name
          type: string
          description: The name for the EC2 instance
        instanceType:
          title: EC2 instance type (e.g., t2.micro)
          type: string
          description: The Type of the EC2 instance
        region:
          title: AWS Region
          type: string
          description: The AWS region where the instance will be deployed
        osChoice:
          title: OS Selection
          type: string
          description: OS selection (amazon_linux, ubuntu, windows, redhat)
          enum:
            - amazon_linux
            - ubuntu
            - windows
            - redhat
        action:
          title: Action
          type: string
          description: Apply or destroy the EC2 instance
          enum:
            - apply
            - destroy
  steps:
    - id: github-action
      name: Trigger GitHub Action
      action: github:actions:dispatch
      input:
        workflowId: manage-ec2.yaml
        repoUrl: github.com?owner=Liquizar&repo=sample-ec2-terraform-backstage
        branchOrTagName: 'main'
        workflowInputs:
          instanceName: ${{ parameters.instanceName }}
          awsRegion: ${{ parameters.region }}
          instanceType: ${{ parameters.instanceType }}
          osChoice: ${{ parameters.osChoice }}
          action: ${{ parameters.action }}
    
    - id: wait-for-workflow
      name: Wait for Workflow Completion
      action: http:fetch
      input:
        url: "https://api.github.com/repos/Liquizar/sample-ec2-terraform-backstage/actions/runs"
        method: GET
        headers:
          Accept: application/vnd.github.v3+json
          Authorization: "Bearer ${{ secrets.GH_PAT }}"
        waitFor:
          intervalMs: 10000
          maxAttempts: 20
          condition: |
            const run = response?.workflow_runs?.find(r => r.name === 'Manage EC2 Instance' && r.status === 'completed');
            Boolean(run) # Ensure it returns true/false

    - id: fetch-terraform-outputs
      name: Fetch Terraform Outputs Artifact
      action: http:fetch
      input:
        url: "https://api.github.com/repos/Liquizar/sample-ec2-terraform-backstage/actions/artifacts"
        method: GET
        headers:
          Accept: application/vnd.github.v3+json
          Authorization: "Bearer ${{ secrets.GH_PAT }}"
      output:
        artifact_url: |
          const artifact = response?.artifacts?.find(a => a.name === 'terraform-outputs');
          artifact ? `https://api.github.com/repos/Liquizar/sample-ec2-terraform-backstage/actions/artifacts/${artifact.id}/zip` : ''


  output:
    text:
      - title: EC2 Instance Details
        content: |
          - **Terraform Outputs Download**: [Click here to download]( ${{ steps['fetch-terraform-outputs'].output.artifact_url }} )

